/*Copyright (c) 2015-2016 WaveMaker.com All Rights Reserved.
 This software is the confidential and proprietary information of WaveMaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with WaveMaker.com*/
package com.wavemaker.sampleapps.wavekart.eshopping;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PostPersist;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * ProductDetails generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`PRODUCT_DETAILS`")
public class ProductDetails implements Serializable {

    private Integer productId;
    private String productName;
    private String productDescription;
    private String category;
    private String imageUrl;
    private BigDecimal price;
    private ProductInventory productInventory;
    private List<CartItems> cartItemses;
    private List<OrderLineItems> orderLineItemses;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PRODUCT_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getProductId() {
        return this.productId;
    }

    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    @Column(name = "`PRODUCT_NAME`", nullable = false, length = 255)
    public String getProductName() {
        return this.productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    @Column(name = "`PRODUCT_DESCRIPTION`", nullable = false, length = 255)
    public String getProductDescription() {
        return this.productDescription;
    }

    public void setProductDescription(String productDescription) {
        this.productDescription = productDescription;
    }

    @Column(name = "`CATEGORY`", nullable = false, length = 255)
    public String getCategory() {
        return this.category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    @Column(name = "`IMAGE_URL`", nullable = false, length = 255)
    public String getImageUrl() {
        return this.imageUrl;
    }

    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    @Column(name = "`PRICE`", nullable = false, scale = 9, precision = 64)
    public BigDecimal getPrice() {
        return this.price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "productDetails")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public ProductInventory getProductInventory() {
        return this.productInventory;
    }

    public void setProductInventory(ProductInventory productInventory) {
        this.productInventory = productInventory;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "productDetails")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public List<CartItems> getCartItemses() {
        return this.cartItemses;
    }

    public void setCartItemses(List<CartItems> cartItemses) {
        this.cartItemses = cartItemses;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "productDetails")
    @Cascade({CascadeType.SAVE_UPDATE, CascadeType.REMOVE})
    public List<OrderLineItems> getOrderLineItemses() {
        return this.orderLineItemses;
    }

    public void setOrderLineItemses(List<OrderLineItems> orderLineItemses) {
        this.orderLineItemses = orderLineItemses;
    }

    @PostPersist
    public void onPostPersist() {
        if(productInventory != null) {
            productInventory.setProductDetails(this);
        }
        if(cartItemses != null) {
            cartItemses.forEach(_cartItems -> _cartItems.setProductDetails(this));
        }
        if(orderLineItemses != null) {
            orderLineItemses.forEach(_orderLineItems -> _orderLineItems.setProductDetails(this));
        }
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ProductDetails)) return false;
        final ProductDetails productDetails = (ProductDetails) o;
        return Objects.equals(getProductId(), productDetails.getProductId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getProductId());
    }
}