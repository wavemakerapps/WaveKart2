/*Copyright (c) 2015-2016 WaveMaker.com All Rights Reserved.
 This software is the confidential and proprietary information of WaveMaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with WaveMaker.com*/
package com.wavemaker.sampleapps.wavekart.eshopping.models.query;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class GetCartItemsIdResponse implements Serializable {


    @JsonProperty("CART_ID")
    @ColumnAlias("CART_ID")
    private Integer cartId;

    @JsonProperty("CURRENT_PRICE")
    @ColumnAlias("CURRENT_PRICE")
    private Double currentPrice;

    @JsonProperty("PRODUCT_ID")
    @ColumnAlias("PRODUCT_ID")
    private Integer productId;

    @JsonProperty("PRODUCT_QUANTITY")
    @ColumnAlias("PRODUCT_QUANTITY")
    private Integer productQuantity;

    @JsonProperty("TOTAL_PRICE")
    @ColumnAlias("TOTAL_PRICE")
    private Double totalPrice;

    public Integer getCartId() {
        return this.cartId;
    }

    public void setCartId(Integer cartId) {
        this.cartId = cartId;
    }

    public Double getCurrentPrice() {
        return this.currentPrice;
    }

    public void setCurrentPrice(Double currentPrice) {
        this.currentPrice = currentPrice;
    }

    public Integer getProductId() {
        return this.productId;
    }

    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    public Integer getProductQuantity() {
        return this.productQuantity;
    }

    public void setProductQuantity(Integer productQuantity) {
        this.productQuantity = productQuantity;
    }

    public Double getTotalPrice() {
        return this.totalPrice;
    }

    public void setTotalPrice(Double totalPrice) {
        this.totalPrice = totalPrice;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof GetCartItemsIdResponse)) return false;
        final GetCartItemsIdResponse getCartItemsIdResponse = (GetCartItemsIdResponse) o;
        return Objects.equals(getCartId(), getCartItemsIdResponse.getCartId()) &&
                Objects.equals(getCurrentPrice(), getCartItemsIdResponse.getCurrentPrice()) &&
                Objects.equals(getProductId(), getCartItemsIdResponse.getProductId()) &&
                Objects.equals(getProductQuantity(), getCartItemsIdResponse.getProductQuantity()) &&
                Objects.equals(getTotalPrice(), getCartItemsIdResponse.getTotalPrice());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCartId(),
                getCurrentPrice(),
                getProductId(),
                getProductQuantity(),
                getTotalPrice());
    }
}